/**
 * Data Object Service
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package ga4gh;

import ga4gh.dos.CreateDataBundleRequest;
import ga4gh.dos.CreateDataBundleResponse;
import ga4gh.dos.CreateDataObjectRequest;
import ga4gh.dos.CreateDataObjectResponse;
import ga4gh.dos.DeleteDataBundleResponse;
import ga4gh.dos.DeleteDataObjectResponse;
import ga4gh.dos.ErrorResponse;
import ga4gh.dos.GetDataBundleResponse;
import ga4gh.dos.GetDataBundleVersionsResponse;
import ga4gh.dos.GetDataObjectResponse;
import ga4gh.dos.GetDataObjectVersionsResponse;
import ga4gh.dos.ListDataBundlesRequest;
import ga4gh.dos.ListDataBundlesResponse;
import ga4gh.dos.ListDataObjectsRequest;
import ga4gh.dos.ListDataObjectsResponse;
import ga4gh.dos.UpdateDataBundleRequest;
import ga4gh.dos.UpdateDataBundleResponse;
import ga4gh.dos.UpdateDataObjectRequest;
import ga4gh.dos.UpdateDataObjectResponse;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * Data Object Service
 *
 * <p>No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API tests for DataObjectServiceApi 
 */
public class DataObjectServiceApiTest {


    private DataObjectServiceApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);
        
        api = JAXRSClientFactory.create("http://localhost/ga4gh/dos/v1", DataObjectServiceApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        ClientConfiguration config = WebClient.getConfig(client); 
    }

    
    /**
     * Create a new Data Bundle
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDataBundleTest() {
        CreateDataBundleRequest body = null;
        //CreateDataBundleResponse response = api.createDataBundle(body);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Make a new Data Object
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDataObjectTest() {
        CreateDataObjectRequest body = null;
        //CreateDataObjectResponse response = api.createDataObject(body);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Delete a Data Bundle
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDataBundleTest() {
        String dataBundleId = null;
        //DeleteDataBundleResponse response = api.deleteDataBundle(dataBundleId);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Delete a Data Object index entry
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDataObjectTest() {
        String dataObjectId = null;
        //DeleteDataObjectResponse response = api.deleteDataObject(dataObjectId);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Retrieve a Data Bundle
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataBundleTest() {
        String dataBundleId = null;
        String version = null;
        //GetDataBundleResponse response = api.getDataBundle(dataBundleId, version);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Retrieve all versions of a Data Bundle
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataBundleVersionsTest() {
        String dataBundleId = null;
        //GetDataBundleVersionsResponse response = api.getDataBundleVersions(dataBundleId);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Retrieve a Data Object
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataObjectTest() {
        String dataObjectId = null;
        String version = null;
        //GetDataObjectResponse response = api.getDataObject(dataObjectId, version);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Retrieve all versions of a Data Object
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataObjectVersionsTest() {
        String dataObjectId = null;
        //GetDataObjectVersionsResponse response = api.getDataObjectVersions(dataObjectId);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * List the Data Bundles
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listDataBundlesTest() {
        ListDataBundlesRequest body = null;
        //ListDataBundlesResponse response = api.listDataBundles(body);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * List the Data Objects
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listDataObjectsTest() {
        ListDataObjectsRequest body = null;
        //ListDataObjectsResponse response = api.listDataObjects(body);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Update a Data Bundle
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDataBundleTest() {
        String dataBundleId = null;
        UpdateDataBundleRequest body = null;
        //UpdateDataBundleResponse response = api.updateDataBundle(dataBundleId, body);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Update a Data Object
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDataObjectTest() {
        String dataObjectId = null;
        UpdateDataObjectRequest body = null;
        //UpdateDataObjectResponse response = api.updateDataObject(dataObjectId, body);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
}
