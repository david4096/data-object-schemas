package ga4gh;

import ga4gh.dos.CreateDataBundleRequest;
import ga4gh.dos.CreateDataBundleResponse;
import ga4gh.dos.CreateDataObjectRequest;
import ga4gh.dos.CreateDataObjectResponse;
import ga4gh.dos.DeleteDataBundleResponse;
import ga4gh.dos.DeleteDataObjectResponse;
import ga4gh.dos.ErrorResponse;
import ga4gh.dos.GetDataBundleResponse;
import ga4gh.dos.GetDataBundleVersionsResponse;
import ga4gh.dos.GetDataObjectResponse;
import ga4gh.dos.GetDataObjectVersionsResponse;
import ga4gh.dos.ListDataBundlesRequest;
import ga4gh.dos.ListDataBundlesResponse;
import ga4gh.dos.ListDataObjectsRequest;
import ga4gh.dos.ListDataObjectsResponse;
import ga4gh.dos.UpdateDataBundleRequest;
import ga4gh.dos.UpdateDataBundleResponse;
import ga4gh.dos.UpdateDataObjectRequest;
import ga4gh.dos.UpdateDataObjectResponse;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import javax.ws.rs.*;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.MediaType;
import org.apache.cxf.jaxrs.ext.multipart.*;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.ApiResponse;
import io.swagger.jaxrs.PATCH;

/**
 * Data Object Service
 *
 * <p>No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 */
@Path("/")
@Api(value = "/", description = "")
public interface DataObjectServiceApi  {

    /**
     * Create a new Data Bundle
     *
     */
    @POST
    @Path("/databundles")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "Create a new Data Bundle", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Data Bundle was successfully created.", response = CreateDataBundleResponse.class),
        @ApiResponse(code = 400, message = "The request is malformed.", response = ErrorResponse.class),
        @ApiResponse(code = 401, message = "The request is unauthorized.", response = ErrorResponse.class),
        @ApiResponse(code = 403, message = "The requester is not authorized to perform this action.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "An unexpected error occurred.", response = ErrorResponse.class) })
    public CreateDataBundleResponse createDataBundle(CreateDataBundleRequest body);

    /**
     * Make a new Data Object
     *
     */
    @POST
    @Path("/dataobjects")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "Make a new Data Object", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully created the Data Object.", response = CreateDataObjectResponse.class),
        @ApiResponse(code = 400, message = "The request is malformed.", response = ErrorResponse.class),
        @ApiResponse(code = 401, message = "The request is unauthorized.", response = ErrorResponse.class),
        @ApiResponse(code = 403, message = "The requester is not authorized to perform this action.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "An unexpected error occurred.", response = ErrorResponse.class) })
    public CreateDataObjectResponse createDataObject(CreateDataObjectRequest body);

    /**
     * Delete a Data Bundle
     *
     */
    @DELETE
    @Path("/databundles/{data_bundle_id}")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "Delete a Data Bundle", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = DeleteDataBundleResponse.class) })
    public DeleteDataBundleResponse deleteDataBundle(@PathParam("data_bundle_id") String dataBundleId);

    /**
     * Delete a Data Object index entry
     *
     */
    @DELETE
    @Path("/dataobjects/{data_object_id}")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "Delete a Data Object index entry", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Data Object was deleted successfully.", response = DeleteDataObjectResponse.class),
        @ApiResponse(code = 400, message = "The request is malformed.", response = ErrorResponse.class),
        @ApiResponse(code = 401, message = "The request is unauthorized.", response = ErrorResponse.class),
        @ApiResponse(code = 403, message = "The requester is not authorized to perform this action.", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "The requested Data Object wasn't found.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "An unexpected error occurred.", response = ErrorResponse.class) })
    public DeleteDataObjectResponse deleteDataObject(@PathParam("data_object_id") String dataObjectId);

    /**
     * Retrieve a Data Bundle
     *
     */
    @GET
    @Path("/databundles/{data_bundle_id}")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "Retrieve a Data Bundle", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully found the Data Bundle.", response = GetDataBundleResponse.class),
        @ApiResponse(code = 400, message = "The request is malformed.", response = ErrorResponse.class),
        @ApiResponse(code = 401, message = "The request is unauthorized.", response = ErrorResponse.class),
        @ApiResponse(code = 403, message = "The requester is not authorized to perform this action.", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "The requested Data Bundle wasn't found.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "An unexpected error occurred.", response = ErrorResponse.class) })
    public GetDataBundleResponse getDataBundle(@PathParam("data_bundle_id") String dataBundleId, @QueryParam("version")String version);

    /**
     * Retrieve all versions of a Data Bundle
     *
     */
    @GET
    @Path("/databundles/{data_bundle_id}/versions")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "Retrieve all versions of a Data Bundle", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The versions for the Data Bundle were found successfully.", response = GetDataBundleVersionsResponse.class),
        @ApiResponse(code = 400, message = "The request is malformed.", response = ErrorResponse.class),
        @ApiResponse(code = 401, message = "The request is unauthorized.", response = ErrorResponse.class),
        @ApiResponse(code = 403, message = "The requester is not authorized to perform this action.", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "The requested Data Bundle wasn't found.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "An unexpected error occurred.", response = ErrorResponse.class) })
    public GetDataBundleVersionsResponse getDataBundleVersions(@PathParam("data_bundle_id") String dataBundleId);

    /**
     * Retrieve a Data Object
     *
     */
    @GET
    @Path("/dataobjects/{data_object_id}")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "Retrieve a Data Object", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Data Object was found successfully.", response = GetDataObjectResponse.class),
        @ApiResponse(code = 400, message = "The request is malformed.", response = ErrorResponse.class),
        @ApiResponse(code = 401, message = "The request is unauthorized.", response = ErrorResponse.class),
        @ApiResponse(code = 403, message = "The requester is not authorized to perform this action.", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "The requested Data Object wasn't found", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "An unexpected error occurred.", response = ErrorResponse.class) })
    public GetDataObjectResponse getDataObject(@PathParam("data_object_id") String dataObjectId, @QueryParam("version")String version);

    /**
     * Retrieve all versions of a Data Object
     *
     */
    @GET
    @Path("/dataobjects/{data_object_id}/versions")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "Retrieve all versions of a Data Object", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The versions for the Data Object were returned successfully.", response = GetDataObjectVersionsResponse.class),
        @ApiResponse(code = 400, message = "The request is malformed.", response = ErrorResponse.class),
        @ApiResponse(code = 401, message = "The request is unauthorized.", response = ErrorResponse.class),
        @ApiResponse(code = 403, message = "The requester is not authorized to perform this action.", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "The requested Data Object wasn't found.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "An unexpected error occurred.", response = ErrorResponse.class) })
    public GetDataObjectVersionsResponse getDataObjectVersions(@PathParam("data_object_id") String dataObjectId);

    /**
     * List the Data Bundles
     *
     */
    @POST
    @Path("/databundles/list")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "List the Data Bundles", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully listed Data Bundles.", response = ListDataBundlesResponse.class),
        @ApiResponse(code = 400, message = "The request is malformed.", response = ErrorResponse.class),
        @ApiResponse(code = 401, message = "The request is unauthorized.", response = ErrorResponse.class),
        @ApiResponse(code = 403, message = "The requester is not authorized to perform this action.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "An unexpected error occurred.", response = ErrorResponse.class) })
    public ListDataBundlesResponse listDataBundles(ListDataBundlesRequest body);

    /**
     * List the Data Objects
     *
     */
    @POST
    @Path("/dataobjects/list")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "List the Data Objects", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Data Objects were listed successfully.", response = ListDataObjectsResponse.class),
        @ApiResponse(code = 400, message = "The request is malformed.", response = ErrorResponse.class),
        @ApiResponse(code = 401, message = "The request is unauthorized.", response = ErrorResponse.class),
        @ApiResponse(code = 403, message = "The requester is not authorized to perform this action.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "An unexpected error occurred.", response = ErrorResponse.class) })
    public ListDataObjectsResponse listDataObjects(ListDataObjectsRequest body);

    /**
     * Update a Data Bundle
     *
     */
    @PUT
    @Path("/databundles/{data_bundle_id}")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "Update a Data Bundle", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Data Bundle was updated successfully.", response = UpdateDataBundleResponse.class),
        @ApiResponse(code = 400, message = "The request is malformed.", response = ErrorResponse.class),
        @ApiResponse(code = 401, message = "The request is unauthorized.", response = ErrorResponse.class),
        @ApiResponse(code = 403, message = "The requester is not authorized to perform this action.", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "The requested Data Bundle wasn't found.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "An unexpected error occurred.", response = ErrorResponse.class) })
    public UpdateDataBundleResponse updateDataBundle(@PathParam("data_bundle_id") String dataBundleId, UpdateDataBundleRequest body);

    /**
     * Update a Data Object
     *
     */
    @PUT
    @Path("/dataobjects/{data_object_id}")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "Update a Data Object", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Data Object was successfully updated.", response = UpdateDataObjectResponse.class),
        @ApiResponse(code = 400, message = "The request is malformed.", response = ErrorResponse.class),
        @ApiResponse(code = 401, message = "The request is unauthorized.", response = ErrorResponse.class),
        @ApiResponse(code = 403, message = "The requester is not authorized to perform this action.", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "The requested Data Object wasn't found.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "An unexpected error occurred.", response = ErrorResponse.class) })
    public UpdateDataObjectResponse updateDataObject(@PathParam("data_object_id") String dataObjectId, UpdateDataObjectRequest body);
}

