/*
 * Data Object Service
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ga4gh;

import invalidPackageName.ApiException;
import ga4gh.dos.CreateDataBundleRequest;
import ga4gh.dos.CreateDataBundleResponse;
import ga4gh.dos.CreateDataObjectRequest;
import ga4gh.dos.CreateDataObjectResponse;
import ga4gh.dos.DeleteDataBundleResponse;
import ga4gh.dos.DeleteDataObjectResponse;
import ga4gh.dos.ErrorResponse;
import ga4gh.dos.GetDataBundleResponse;
import ga4gh.dos.GetDataBundleVersionsResponse;
import ga4gh.dos.GetDataObjectResponse;
import ga4gh.dos.GetDataObjectVersionsResponse;
import ga4gh.dos.ListDataBundlesRequest;
import ga4gh.dos.ListDataBundlesResponse;
import ga4gh.dos.ListDataObjectsRequest;
import ga4gh.dos.ListDataObjectsResponse;
import ga4gh.dos.UpdateDataBundleRequest;
import ga4gh.dos.UpdateDataBundleResponse;
import ga4gh.dos.UpdateDataObjectRequest;
import ga4gh.dos.UpdateDataObjectResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataObjectServiceApi
 */
@Ignore
public class DataObjectServiceApiTest {

    private final DataObjectServiceApi api = new DataObjectServiceApi();

    
    /**
     * Create a new Data Bundle
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDataBundleTest() throws ApiException {
        CreateDataBundleRequest body = null;
        CreateDataBundleResponse response = api.createDataBundle(body);

        // TODO: test validations
    }
    
    /**
     * Make a new Data Object
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDataObjectTest() throws ApiException {
        CreateDataObjectRequest body = null;
        CreateDataObjectResponse response = api.createDataObject(body);

        // TODO: test validations
    }
    
    /**
     * Delete a Data Bundle
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDataBundleTest() throws ApiException {
        String dataBundleId = null;
        DeleteDataBundleResponse response = api.deleteDataBundle(dataBundleId);

        // TODO: test validations
    }
    
    /**
     * Delete a Data Object index entry
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDataObjectTest() throws ApiException {
        String dataObjectId = null;
        DeleteDataObjectResponse response = api.deleteDataObject(dataObjectId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Data Bundle
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataBundleTest() throws ApiException {
        String dataBundleId = null;
        String version = null;
        GetDataBundleResponse response = api.getDataBundle(dataBundleId, version);

        // TODO: test validations
    }
    
    /**
     * Retrieve all versions of a Data Bundle
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataBundleVersionsTest() throws ApiException {
        String dataBundleId = null;
        GetDataBundleVersionsResponse response = api.getDataBundleVersions(dataBundleId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Data Object
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataObjectTest() throws ApiException {
        String dataObjectId = null;
        String version = null;
        GetDataObjectResponse response = api.getDataObject(dataObjectId, version);

        // TODO: test validations
    }
    
    /**
     * Retrieve all versions of a Data Object
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataObjectVersionsTest() throws ApiException {
        String dataObjectId = null;
        GetDataObjectVersionsResponse response = api.getDataObjectVersions(dataObjectId);

        // TODO: test validations
    }
    
    /**
     * List the Data Bundles
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listDataBundlesTest() throws ApiException {
        ListDataBundlesRequest body = null;
        ListDataBundlesResponse response = api.listDataBundles(body);

        // TODO: test validations
    }
    
    /**
     * List the Data Objects
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listDataObjectsTest() throws ApiException {
        ListDataObjectsRequest body = null;
        ListDataObjectsResponse response = api.listDataObjects(body);

        // TODO: test validations
    }
    
    /**
     * Update a Data Bundle
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDataBundleTest() throws ApiException {
        String dataBundleId = null;
        UpdateDataBundleRequest body = null;
        UpdateDataBundleResponse response = api.updateDataBundle(dataBundleId, body);

        // TODO: test validations
    }
    
    /**
     * Update a Data Object
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDataObjectTest() throws ApiException {
        String dataObjectId = null;
        UpdateDataObjectRequest body = null;
        UpdateDataObjectResponse response = api.updateDataObject(dataObjectId, body);

        // TODO: test validations
    }
    
}
